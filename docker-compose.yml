version: "3.9"
services:
  web:
    build: .
    container_name: finnect_web
    volumes:
      - ./tmp:/data/tmp
    working_dir: /app
    ports:
      - "8000:8000" 
    env_file:
      - .env
    depends_on:
      - db
      - redis
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 1 --proxy-headers

  worker:
    build: .
    container_name: celery_worker
    depends_on:
      - redis
      - db
    env_file:
      - .env
    command: celery -A app.core.celery_app.celery_app worker --loglevel=info

  django:
    build: .
    container_name: finnect_django
    # volumes:
    #   - ./backend:/app
    ports:
      - "8001:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
    entrypoint: ["bash", "/app/entrypoint.sh"]

  db:
    image: postgres:15
    container_name: finnect_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-finnect_db}
      POSTGRES_USER: ${POSTGRES_USER:-finnect_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-finnect_pass}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: finnect_redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]

volumes:
  postgres_data:
